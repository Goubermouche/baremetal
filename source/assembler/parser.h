#pragma once
#include "assembler/instruction/operands/immediates.h"
#include "assembler/instruction/operands/operands.h"

#include <utility/containers/dynamic_string.h> 

namespace baremetal {
	enum keyword_type : u8 {
		KW_NONE = 0,
		// registers
		KW_CR0,
		KW_CR1,
		KW_CR2,
		KW_CR3,
		KW_CR4,
		KW_CR8,
		KW_DR0,
		KW_DR1,
		KW_DR2,
		KW_DR3,
		KW_DR4,
		KW_DR5,
		KW_DR6,
		KW_DR7,
		KW_ES,
		KW_CS,
		KW_SS,
		KW_DS,
		KW_FS,
		KW_GS,
		KW_BND0,
		KW_BND1,
		KW_BND2,
		KW_BND3,
		KW_MM0,
		KW_MM1,
		KW_MM2,
		KW_MM3,
		KW_MM4,
		KW_MM5,
		KW_MM6,
		KW_MM7,
		KW_ZMM0,
		KW_ZMM1,
		KW_ZMM2,
		KW_ZMM3,
		KW_ZMM4,
		KW_ZMM5,
		KW_ZMM6,
		KW_ZMM7,
		KW_ZMM8,
		KW_ZMM9,
		KW_ZMM10,
		KW_ZMM11,
		KW_ZMM12,
		KW_ZMM13,
		KW_ZMM14,
		KW_ZMM15,
		KW_ZMM16,
		KW_ZMM17,
		KW_ZMM18,
		KW_ZMM19,
		KW_ZMM20,
		KW_ZMM21,
		KW_ZMM22,
		KW_ZMM23,
		KW_ZMM24,
		KW_ZMM25,
		KW_ZMM26,
		KW_ZMM27,
		KW_ZMM28,
		KW_ZMM29,
		KW_ZMM30,
		KW_ZMM31,
		KW_YMM0,
		KW_YMM1,
		KW_YMM2,
		KW_YMM3,
		KW_YMM4,
		KW_YMM5,
		KW_YMM6,
		KW_YMM7,
		KW_YMM8,
		KW_YMM9,
		KW_YMM10,
		KW_YMM11,
		KW_YMM12,
		KW_YMM13,
		KW_YMM14,
		KW_YMM15,
		KW_YMM16,
		KW_YMM17,
		KW_YMM18,
		KW_YMM19,
		KW_YMM20,
		KW_YMM21,
		KW_YMM22,
		KW_YMM23,
		KW_YMM24,
		KW_YMM25,
		KW_YMM26,
		KW_YMM27,
		KW_YMM28,
		KW_YMM29,
		KW_YMM30,
		KW_YMM31,
		KW_XMM0,
		KW_XMM1,
		KW_XMM2,
		KW_XMM3,
		KW_XMM4,
		KW_XMM5,
		KW_XMM6,
		KW_XMM7,
		KW_XMM8,
		KW_XMM9,
		KW_XMM10,
		KW_XMM11,
		KW_XMM12,
		KW_XMM13,
		KW_XMM14,
		KW_XMM15,
		KW_RAX,
		KW_RCX,
		KW_RDX,
		KW_RBX,
		KW_RSP,
		KW_RBP,
		KW_RSI,
		KW_RDI,
		KW_R8,
		KW_R9,
		KW_R10,
		KW_R11,
		KW_R12,
		KW_R13,
		KW_R14,
		KW_R15,
		KW_EAX,
		KW_ECX,
		KW_EDX,
		KW_EBX,
		KW_ESP,
		KW_EBP,
		KW_ESI,
		KW_EDI,
		KW_R8D,
		KW_R9D,
		KW_R10D,
		KW_R11D,
		KW_R12D,
		KW_R13D,
		KW_R14D,
		KW_R15D,
		KW_AX,
		KW_CX,
		KW_DX,
		KW_BX,
		KW_SP,
		KW_BP,
		KW_SI,
		KW_DI,
		KW_R8W,
		KW_R9W,
		KW_R10W,
		KW_R11W,
		KW_R12W,
		KW_R13W,
		KW_R14W,
		KW_R15W,
		KW_AL,
		KW_CL,
		KW_DL,
		KW_BL,
		KW_SPL,
		KW_BPL,
		KW_SIL,
		KW_DIL,
		KW_AH,
		KW_CH,
		KW_DH,
		KW_BH,
		KW_R8B,
		KW_R9B,
		KW_R10B,
		KW_R11B,
		KW_R12B,
		KW_R13B,
		KW_R14B,
		KW_R15B,

		// types
		KW_BYTE,
		KW_WORD,
		KW_DWORD,
		KW_QWORD,

		// special characters
		KW_EOF,
		KW_LBRACKET, // [ 
		KW_RBRACKET, // ]
		KW_LBRACE,   // {
		KW_RBRACE,   // }
		KW_PLUS,
		KW_MINUS,
		KW_ASTERISK,
		KW_COMMA,
		KW_NEWLINE,
		KW_DOLLARSIGN,

		KW_IDENTIFIER,
		KW_NUMBER,

		KW_REL,
	};

	class lexer {
		public:
			void set_text(const utility::dynamic_string& text);
			auto get_next_token() -> keyword_type;
		private:
			auto get_next_char() -> char;
		private:
			u64 m_index;
			utility::dynamic_string m_text;
			char m_current_char;
		public:
			keyword_type current;
			imm current_immediate;
			utility::dynamic_string current_string;
	};

	auto keyword_to_register(keyword_type kw) -> reg;
	auto get_keyword_type(const utility::dynamic_string& str) -> keyword_type;
	auto parse_operand(const utility::dynamic_string& str) -> operand;
} // namespace baremetal
